KUBERNETES OBJECT MOBEL

Five types of Object model:-

Namespace
POD
Replicaset
Deployment
Service


           Namespace:
In Kubernetes, namespaces provides a mechanism for isolating groups of resources within a single cluster.
Names of resources need to be unique within a namespace, but not across namespaces.
Namespace-based scoping is applicable only for namespaced objects and not for cluster-wide objects .
Namespaces provide a scope for names. 
Names of resources need to be unique within a namespace, but not across namespaces.
Namespaces cannot be nested inside one another and each Kubernetes resource can only be in one namespace.

To create namespace :-

kubectl create namespace [namespace-name]

To check the Namespaces :-

kubectl get namespace

kubectl get ns


            Pod:
Pods are the smallest deployable units of computing that you can create and manage in Kubernetes. 
A Pod is a group of one or more containers, with shared storage and network resources, and a specification for how to run the containers. 
A Pod's contents are always co-located and co-scheduled, and run in a shared context. A Pod models an application-specific "logical host": it contains one or more application containers which are relatively tightly coupled. 
In non-cloud contexts, applications executed on the same physical or virtual machine are analogous to cloud applications executed on the same logical host.

To check the pods :-

kubectl get pods

            Replicaset:
Replica Set A ReplicaSet's purpose is to maintain a stable set of replica Pods running at any given time. 
As such, it is often used to guarantee the availability of a specified number of identical Pods. 
A ReplicaSet is defined with fields, including a selector that specifies how to identify Pods it can acquire, a number of replicas indicating how many Pods it should be maintaining, and a pod template specifying the data of new Pods it should create to meet the number of replicas criteria. 
A ReplicaSet then fulfills its purpose by creating and deleting Pods as needed to reach the desired number. 
When a ReplicaSet needs to create new Pods, it uses its Pod template.

kubectl get rs

            service:
Expose an application running in your cluster behind a single outward-facing endpoint, even when the workload is split across multiple backends. 
An abstract way to expose an application running on a set of Pods as a network service. 
With Kubernetes you don't need to modify your application to use an unfamiliar service discovery mechanism. 
Kubernetes gives Pods their own IP addresses and a single DNS name for a set of Pods, and can load-balance across them.

